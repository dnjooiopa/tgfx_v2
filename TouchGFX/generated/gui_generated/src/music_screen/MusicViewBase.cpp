/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/music_screen/MusicViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

MusicViewBase::MusicViewBase() :
    buttonCallback(this, &MusicViewBase::buttonCallbackHandler)
{

    s1_box_1.setPosition(0, 0, 480, 272);
    s1_box_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    buttonWithLabel1.setXY(17, 9);
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithLabel1.setLabelText(touchgfx::TypedText(T_SINGLEUSEID4));
    buttonWithLabel1.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel1.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel1.setAction(buttonCallback);

    MusicTextArea.setPosition(38, 106, 405, 45);
    MusicTextArea.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    MusicTextArea.setLinespacing(0);
    Unicode::snprintf(MusicTextAreaBuffer, MUSICTEXTAREA_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID7).getText());
    MusicTextArea.setWildcard(MusicTextAreaBuffer);
    MusicTextArea.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));

    Play.setXY(17, 200);
    Play.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_PLAY_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_PLAY_32_ID));
    Play.setIconXY(19, 14);
    Play.setAction(buttonCallback);

    Prev.setXY(166, 200);
    Prev.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_GO_BACK_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_GO_BACK_32_ID));
    Prev.setIconXY(14, 15);
    Prev.setAction(buttonCallback);

    Next.setXY(226, 200);
    Next.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_GO_NEXT_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_GO_NEXT_32_ID));
    Next.setIconXY(14, 15);
    Next.setAction(buttonCallback);

    Stop.setXY(88, 200);
    Stop.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_STOP_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_STOP_32_ID));
    Stop.setIconXY(14, 14);
    Stop.setAction(buttonCallback);

    VolDown.setXY(314, 200);
    VolDown.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_SOUND_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_SOUND_32_ID));
    VolDown.setIconXY(13, 14);
    VolDown.setAction(buttonCallback);

    VolUp.setXY(383, 200);
    VolUp.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_SOUND_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_SOUND_32_ID));
    VolUp.setIconXY(13, 14);
    VolUp.setAction(buttonCallback);

    Pause.setXY(17, 200);
    Pause.setVisible(false);
    Pause.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_PAUSE_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_PAUSE_32_ID));
    Pause.setIconXY(17, 14);
    Pause.setAction(buttonCallback);

    add(s1_box_1);
    add(buttonWithLabel1);
    add(MusicTextArea);
    add(Play);
    add(Prev);
    add(Next);
    add(Stop);
    add(VolDown);
    add(VolUp);
    add(Pause);
}

void MusicViewBase::setupScreen()
{

}

void MusicViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
    {
        //music_to_screen
        //When buttonWithLabel1 clicked change screen to screen
        //Go to screen with no screen transition
        application().gotoscreenScreenNoTransition();
    }
    else if (&src == &Play)
    {
        //play
        //When Play clicked call virtual function
        //Call controlPlay
        controlPlay();
    }
    else if (&src == &Prev)
    {
        //playPrevious
        //When Prev clicked call virtual function
        //Call controlPrev
        controlPrev();
    }
    else if (&src == &Next)
    {
        //playNext
        //When Next clicked call virtual function
        //Call controlNext
        controlNext();
    }
    else if (&src == &Stop)
    {
        //stopMusic
        //When Stop clicked call virtual function
        //Call controlStop
        controlStop();
    }
    else if (&src == &VolDown)
    {
        //volumeDown
        //When VolDown clicked call virtual function
        //Call controlVolumeDown
        controlVolumeDown();
    }
    else if (&src == &VolUp)
    {
        //volumeUp
        //When VolUp clicked call virtual function
        //Call controlVolumeUp
        controlVolumeUp();
    }
    else if (&src == &Pause)
    {
        //pause
        //When Pause clicked call virtual function
        //Call controlPlay
        controlPlay();
    }
}
